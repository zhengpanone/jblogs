======================
Elasticsearch
======================

介绍
==============

Elasticserch是一个开源且分布式、RESTful风格的搜索引擎和数据分析引擎，由Java编写，它的内部使用的是Apache Lucene做索引功能，Elasticsearch建立在一个全文的搜索引擎库“Apache Lucene”基础之上，作为Elastic Stack的核心，它集中存储你的数据。Elasticsearch不仅仅只是一个全文搜索引擎，它还可以用作全文检索、结构化搜索、分析以及这三个功能的组合。

- 全文检索：一个分布式的实时文档存储，每个字段都可以被索引与搜索

- 结构化搜索：能胜任上百个服务节点的扩展，并支持PB级别的结构化或者非结构化数据

- 分析：一个分布式实时分析搜索引擎

基本概念
================

Elasticsearch的基本概念大致可以分为以下几点：Cluster、Node、Index、Shards、Replicas、Document。下面简单介绍这几种概念：

Cluster
=====================

集群是一个或多个节点的集合，它们共同保存整个数据，并提供跨所有节点的联合索引和搜索功能。集群由唯一名称标识，默认情况下为"elasticsearch"。此名称很重要，因为如果节点设置为按名称加入集群，则该节点只能是集群的一部分。确保不要在不同的环境中用相同集群名称，否则最终会导致节点加入错误的集群。每个集群都要有自己唯一的集群名称。

Node
======================

节点是作为集群一部分的单个服务器，存储数据并参与集群的索引和搜索功能。与集群一样，节点由名称标识，默认情况下，该名称是在启动时分配给及节点的随机通用唯一标识符(UUID)。如果不需要默认值，可以定义所需的任何节点名称。此名称对于管理目的非常重要，可以在其中识别网络中的哪些服务器与Elasticsearch集群中的哪些节点相对应。可以将节点配置按集群名称加入特定集群。默认情况下，每个节点都设置为加入一个名为elasticsearch的集群，这意味着如果你在网络上启动了许多节点并且假设它们可以相互发现，它们将自动形成并加入一个名为elasticsearch的集群。在单个集群中，可以拥有任意数量的节点。此外，如果网络上当前没有其它Elasticsearch节点在运行，则默认情况下启动单个节点将形成一个名为elasticsearch的新节点集群。

Index
=================

索引是具有某些类似特征的文档集合。例如，你可以拥有客户数据的索引，产品目录的另一个索引以及订单数据的另一个索引。索引由名称标识(必须全部为小写)，并且此名称用于在对其中的文档执行索引，搜索，更新和删除操作时引用索引。在单个集群中，你可以根据需要定义任意数量的索引。Index 体现了逻辑空间的概念，每个索引都有自己的 Mapping 定义，用于定义包含文档的字段名称和字段类型。

索引的 Mapping 与 Settings

- Mapping 定义文档字段的类型

- Setting 定义不同的数据分布

索引元数据内包含 Mapping 和 Setting

索引元数据 一个完整的索引元数据包含Mapping信息和Setting信息。


Document
==================

文档是可以建立索引的基本信息单元，是所有可搜索数据的最小单位，。例如，你可以为单个客户创建一个文档，为单个产品创建另一个文档，为单个订单创建另一个文档。这些文档会被序列化成 JSON 格式，保存在 Elasticsearch 的分片中，因为Elasticsearch用JSON(JavaScript对象表示法)表示，格式为 Key=>Value，这是一种无处不在的internet数据交换格式。在索引中，可以存储任意数量的文档。Key在Elasticsearch被称为字段名称 Value在Elasticsearch中被称为字段值。每个字段Key都有对应的字段类型 （字符串text/数值long/布尔boolean/日期date/二进制binary/范围类型range）等。。。字段类型我们可以自己定义，也可以先插入文档后通过 Elasticsearch 自动推算字段类型。每个文档都有一个 Unique ID，你可以通过创建文档时指定，或者通过 Elasticsearch 自动生成。